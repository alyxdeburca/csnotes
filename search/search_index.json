{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Leaving Certificate Computer Science 2023","text":""},{"location":"#abstraction","title":"Abstraction","text":""},{"location":"#algorithms","title":"Algorithms","text":""},{"location":"#databases","title":"Databases","text":""},{"location":"#ethics-and-computing","title":"Ethics and Computing","text":""},{"location":"#modelling","title":"Modelling","text":""},{"location":"#more-about-python","title":"More About Python","text":""},{"location":"#sdlc","title":"SDLC","text":""},{"location":"#software-development-process","title":"Software Development Process","text":""},{"location":"#unit-testing","title":"Unit Testing","text":""},{"location":"#universal-design","title":"Universal Design","text":""},{"location":"#logic-gates","title":"Logic Gates","text":""},{"location":"#ai","title":"AI","text":""},{"location":"#computer-architecture","title":"Computer Architecture","text":""},{"location":"#computer-components","title":"Computer Components","text":""},{"location":"#resources","title":"Resources","text":""},{"location":"#the-cpu","title":"The CPU","text":""},{"location":"#electronics","title":"Electronics","text":""},{"location":"#exam-papers","title":"Exam Papers","text":""},{"location":"#exam-structure","title":"Exam Structure","text":""},{"location":"#flashcards","title":"Flashcards","text":""},{"location":"#python","title":"Python","text":""},{"location":"AI/","title":"Artificial Intelligence","text":"<p>Living with Artificial Intelligence - Reith Lessons</p> <p>Artificial Intelligence (AI) is intelligence demonstrated by machines as opposed to natural intelligence in human or animals</p>"},{"location":"AI/#for","title":"For","text":"<ul> <li>Large datasets</li> <li>Quick Computations</li> <li>Doesn't get bored</li> <li>Highly accurate</li> <li>Companionship</li> <li>Diagnostics</li> </ul>"},{"location":"AI/#against","title":"Against","text":"<ul> <li>Could become smarter than humans</li> <li>Lack empathy</li> <li>Expensive</li> <li>Unemployment</li> <li>Sentience</li> </ul>"},{"location":"Abstraction/","title":"Abstraction","text":""},{"location":"Abstraction/#abstracting-pac-man","title":"Abstracting Pac-Man","text":"Key Features Key Features Scoring Graphics Characters Controls UI/UX Map Structure"},{"location":"Abstraction/#school-attendance-system","title":"School Attendance System","text":"Key Features Key Features Database Reporting I/O Attendance GUI Department Software Parents TUSLA Security"},{"location":"Abstraction/#mullingar-driving-school","title":"~~Mullingar Driving School~~","text":""},{"location":"Abstraction/#online-booking-system","title":"~~Online Booking System~~","text":"Key Features Key Features Database ~~Username~~ ~~Booking~~ Password Rule Password pAssw0r"},{"location":"Algorithms/","title":"Algorithms","text":""},{"location":"Algorithms/#flowchart-symbols","title":"Flowchart Symbols","text":""},{"location":"Databases/","title":"Databases","text":""},{"location":"Databases/#using-python-javascript-with-firebase","title":"Using Python &amp; Javascript with Firebase","text":"<ul> <li>Firebase Database</li> <li>NoSQL Realtime Database</li> <li>Managed by Google</li> <li>Accessible via the Internet</li> <li>Compatible with Python, Javascript, etc...</li> <li>Data stored in the cloud</li> <li>Multi-User</li> <li>Can handle real-time update etc. Concurrency, Deadlock</li> <li>Some GDPR issues due to location of servers...</li> <li>... but a fine for simple (educational) data storage and retrieval</li> </ul>"},{"location":"Databases/#comparing-firebase-and-mysql","title":"Comparing Firebase and MySQL","text":"<ul> <li>Firebase</li> <li>Firebase is a cloud-based NoSQL database. Data is stored and processed in the cloud</li> <li>Firebase is suitable for real-time application.</li> <li>Firebase is only available on GCP (Google Cloud Platform). It is owned by Google.</li> <li> <p>In Firebase any key/field can be added easily without affecting the existing design.</p> </li> <li> <p>MySQL</p> </li> <li>MySQL is a relational database management system (RDBMS)</li> <li>MySQL mostly used for relationaly data and transactions.</li> <li>MySQL installs it anywhere and several clouds provide support managed version of it.</li> <li>MySQL not so flexible design-wise, New Column insertion may affect the design.</li> </ul> MySQL Firebase Nature Relational (SQL) database Non-relational (NoSQL) database Design Based on Tables Based on Collections and Documents Scalability Vertical (Rows) Add CPUs, Memory, etc. Horizontal - Scale-out over a cluster Model Detailed Model required Less detail needed Community Huge Community Smaller but growing Standardisation Based on SQL No standard query language Schema Rigid Schema Dynamic Schema Flexibility Design is Less Flexible Design more Flexible pg281 Q4"},{"location":"Ethics%20and%20Computing/","title":"Ethics and Computing","text":""},{"location":"Ethics%20and%20Computing/#introduction","title":"Introduction","text":"<ul> <li>Many changes brought about by computing<ul> <li>Faster, cheaper, simpler and more reliable communication</li> <li>Improved access to goods and services</li> <li>Huge improvement in Healthcare</li> <li>Better access to travel</li> <li>Increased safety in travel and other areas</li> <li>Many other positive changes in our way of life</li> </ul> </li> <li>So, it's all good then? -- Mainly, Yes!</li> <li>However, with all of this Power comes Responsibility</li> <li>Many decisions to be made in terms of Systems;<ul> <li>Design</li> <li>Development</li> <li>Deployment</li> </ul> </li> <li>Important to balance<ul> <li>Needs</li> <li>Values</li> <li>Expectations</li> </ul> </li> <li>Some compromises may be necessary</li> <li>One size may not fit all Stakeholders<ul> <li>Who is it for?</li> <li>Who will benefit?</li> <li>Are anyone's rights being interfered with?</li> <li>Who owns the system?</li> <li>Who is responsible for automated Processes?</li> <li>Who is responsible for automated Decisions?</li> </ul> </li> <li>What about,<ul> <li>Freedom of Information?</li> <li>Right to privacy</li> <li>Fairness</li> </ul> </li> </ul>"},{"location":"Ethics%20and%20Computing/#ethics","title":"Ethics","text":"<ul> <li>The principles that govern how we lead our lives</li> <li>Personal and societal views about what is<ul> <li>Right and Wrong</li> <li>Just and Unjust</li> </ul> </li> <li>Ethics are not:<ul> <li>Laws, Rules, or Regulations</li> <li>A checklist of Do's and Don'ts</li> </ul> </li> </ul>"},{"location":"Ethics%20and%20Computing/#how-we-examine-ethical-problems","title":"How we examine ethical problems:","text":"<ul> <li>Outcome<ul> <li>Looking at Outcomes can help us discriminate Right from Wrong</li> </ul> </li> <li>Social media example:<ul> <li>Can have positive outcomes:<ul> <li>Social contact, interaction, communication</li> <li>Access to news and information on products and services</li> <li>Leisure and entertainment</li> </ul> </li> <li>Can also have negative outcomes:<ul> <li>Bullying</li> <li>Antisocial behaviour</li> <li>Mental health issues</li> </ul> </li> </ul> </li> <li>Don't throw out the baby with the bath-water</li> </ul>"},{"location":"Ethics%20and%20Computing/#positive-values-in-computing","title":"Positive values in computing","text":"<ul> <li>Values can fit many categories:</li> <li>Ethical pluralism<ul> <li>Modern world much more connected</li> <li>Many people work in Global teams</li> <li>Global Socio-technical systems</li> <li>Important to understand and respect the values of all</li> <li>Danger of 'Dominant Culture' setting the rules</li> <li>Personal and Professional issue</li> </ul> </li> </ul>"},{"location":"Ethics%20and%20Computing/#professional-codes-of-ethics","title":"Professional codes of ethics","text":"<ul> <li>Set of guiding principles to<ul> <li>ensure ethical behaviour</li> <li>high standard of conduct</li> </ul> </li> <li>Public trust in professional integrity</li> <li>Code of ethics quite common<ul> <li>Engineers</li> <li>Doctors, nurses</li> <li>Teachers</li> <li>Accountants</li> <li>Computer Scientists</li> <li>Lawyers</li> </ul> </li> <li> </li> </ul>"},{"location":"Ethics%20and%20Computing/#acm-association-for-computing-machinery","title":"ACM - Association for Computing Machinery","text":"<ul> <li>Founded 1947</li> <li>Largest International Organisation</li> <li>Represents<ul> <li>Computer scientists</li> <li>Educators</li> <li>Researchers</li> <li>Students</li> </ul> </li> <li> <ul> <li> </li> <li>Updated regularly</li> <li>Last update in 2018</li> <li>Lists general principles</li> <li>Professional responsibilities</li> <li>Professional leadership principles and rules<ol> <li>Contribute to society and to human wellbeing, acknowledging that all people are stakeholders in computing.</li> <li>Avoid harm.</li> <li>Be honest and trustworthy.</li> <li>Be fair and take actionn not to discriminate.</li> <li>Respect the work required to produce new ideas, inventions, creative works, and computing artefacts.</li> <li>Respect privacy.</li> <li>Honour confidentiality.</li> </ol> </li> </ul> </li> <li> <ul> <li> </li> <li>Based on Fundamental Rights and Ethical Principles,<ol> <li>Human agency and oversight.</li> <li>Technical robustness and safety.</li> <li>Privacy and data governance.</li> <li>Transparency.</li> <li>Diversity, non-discrimination and fairness.</li> <li>Societal and environmental well-being.</li> <li>Accountability.</li> </ol> </li> </ul> </li> </ul>"},{"location":"Ethics%20and%20Computing/#code-of-ethics-and-professional-conduct","title":"Code of Ethics and Professional Conduct","text":""},{"location":"Ethics%20and%20Computing/#eu-ethics-guidelines-for-trustworthy-ai","title":"EU - Ethics guidelines for Trustworthy AI:","text":""},{"location":"Ethics%20and%20Computing/#responsibility-and-accountability","title":"Responsibility and Accountability","text":"<ul> <li>More and more aspects of our lives depend on<ul> <li>Computer systems, Hardware, and above all....</li> <li>Software</li> </ul> </li> <li>Testing is critically important BUT Expensive and Time-consuming</li> <li>Same goes for training</li> <li>Companies want to get to market quickly and cheaply</li> <li>And these companies can be very powerful and persuasive</li> <li>Politicians and other decision-makers can be lobbied</li> <li>Personal and Corporate moral responsibility is important</li> <li>\"Computer Error\", \"Software Glitch\" and similar phrases have been used for years to avoid moral responsibility</li> <li>\"Depersonalising\" somehow avoids human responsibility</li> <li>With the rise in Machine Learning, this needs to change.</li> <li>Someone, somewhere created the Algorithm!</li> <li>Responsibility, Accountability, and Transparency are especially relevant for systems that use machine learning and algorithmic processes for recommendations or decisions</li> </ul>"},{"location":"Ethics%20and%20Computing/#data-protection","title":"Data Protection","text":"<ul> <li>In a Global data network, the rules can get very cloudy...</li> <li>... and Broken</li> <li>Companies can claim that they need to use data to provide \"the best customer experience\"</li> <li>Often questions as to the location (jurisdiction) of the data</li> <li>Not easy to find and prosecute breaches and abuses</li> <li>Data is well hidden from individuals</li> <li>Depend on whistle-blowers to highlight misuse and other issues</li> </ul>"},{"location":"Ethics%20and%20Computing/#transparency-in-ai-use","title":"Transparency in AI Use","text":"<ul> <li>Many systems use Modelling and Machine Learning to:<ul> <li>Analyse purchasing patterns</li> <li>Examine our music, podcast, or video streaming prefences</li> </ul> </li> <li>This data can be used to predict and suggest future 'needs'</li> <li>But in these cases, no big deal if it's not 100% accurate</li> <li>However, in some areas accuracy is much more important</li> <li>Health-related applications like cancer screening demand<ul> <li>Accurate and reliable data - both training and real-time</li> <li>Transparency with regard to data and the decision-making process</li> <li>Exhaustive (and on-going) testing of the algorithm</li> <li>End-user (medical professionals) engagement and feedback</li> </ul> </li> <li>Medical ethics require clinical decisions to be based on<ul> <li>Transparency</li> <li>Accountability</li> <li>Explainability</li> </ul> </li> <li>Who or what is responsible for the decision?<ul> <li>Should be the medical professional - supported by Machine Learning</li> </ul> </li> <li>Not all medical conditions are equal in terms of <ul> <li>Research (and Research funding)</li> <li>Big Pharma support (drugs and research)</li> </ul> </li> <li>Priority given to more affluent societies and illnesses<ul> <li>\"Diseases of the rich!\"</li> <li>Better ($$$) results for the pharma companies</li> </ul> </li> <li>Example of... Heart-disease (better cash-flow)</li> <li>Not all groups are represented equally in the data<ul> <li>Women have traditionally been excluded from research trials</li> <li>Less affluent societies have been (somewhat) ignored</li> </ul> </li> <li>So, less acccurate data available for these demographics</li> <li>Symptoms can be misinterpreted and diseases left untreated</li> <li>These inaccuracies (bias) can cause imbalance in the use of ML<ul> <li>Favouring certain diseases and demographics</li> <li>Exacerbate inequalities in healthcare</li> </ul> </li> <li>This lack of transparency can affect the uses of AI in healthcare</li> <li>Bias in AI - Image and facial recognition</li> </ul>"},{"location":"Ethics%20and%20Computing/#data-quality","title":"Data quality","text":""},{"location":"Ethics%20and%20Computing/#one-of-the-biggest-problems-in-ml","title":"One of the biggest problems in ML","text":"<ul> <li>Poor quality data = poor quality models - GIGO</li> <li>Note quote from (1700s) - so this is not new</li> <li>Typical issues:<ul> <li>Missing values (gaps)</li> <li>Outliers</li> <li>Imbalanced data</li> </ul> </li> <li> <ul> <li> </li> <li>Very serious issue in ML datasets</li> <li>Biased data leads to biased models</li> <li>US Healthcare model example - racial bias</li> <li>Misplaced trust in machine-based decisions</li> <li>But it's the training dataset that matters</li> <li>Racial, socio-economic or gender are the main issues</li> <li>Problem with black-box algorithms - data is not transparent</li> <li>Can lead to questions of trust</li> </ul> </li> <li> <ul> <li> </li> <li>Huge training data-sets created by humans</li> <li>ImageNet Large image-recognition training library<ul> <li>Images harvested from web searches over 10-year period</li> <li>Labelled by team of people and fed to a ML algorithm</li> <li>Seemed to be highly accurate at first</li> <li>Later shown to contain 'disturbing biases'</li> <li>Description tags may be correct but open to error / abuse</li> <li>Subjective descriptions can include bias in terms of:<ul> <li>Political </li> <li>Cultural</li> <li>Social</li> </ul> </li> <li>These biases can be conscious or unconscious</li> </ul> </li> <li>ML also requires classification according to values like:<ul> <li>Gender</li> <li>Nationality</li> <li>Ethnicity</li> <li>Etc...</li> </ul> </li> <li>This can be problematic - and even inaccurate</li> <li>Data-sets are often imbalanced in terms of gender, race, etc.</li> <li>Many facial recognition systems are only useful when presented with images of white males</li> <li>Struggle with women and people of colour</li> <li>The Gender Shades Project - Joy Boulamwini, MIT<ul> <li>Identify bias in gender classification in different AI facial recognition projects</li> </ul> </li> <li>What's the big deal anyway?</li> <li>Facial recognition is growing at an alarming rate</li> <li>Unlocking your phone, boarding a plane</li> <li>Government agencies</li> <li>Police forces starting to use them</li> <li>Gardai looking for facial recognition on Bodycams</li> <li>But the quality doesn't seem to be keeping up</li> <li>Not yet fit for purpose - Still too much room for error</li> <li>2020 - Microsoft, Amazon, et. al. paused development of facial recognition software for policing - citing the need for stronger regulations (and more accuracy!)</li> <li>Ethical concerns? Maybe</li> <li>Fear of litigation? Definitely!</li> </ul> </li> <li> </li> </ul>"},{"location":"Ethics%20and%20Computing/#bias","title":"Bias:","text":""},{"location":"Ethics%20and%20Computing/#bias-in-ai-image-and-facial-recognition","title":"Bias in AI - Image and facial recognition","text":""},{"location":"Ethics%20and%20Computing/#fairness-and-justice","title":"Fairness and justice","text":"<ul> <li>ML systems often deployed for 'efficiency'<ul> <li>Data mined from many sources - even Public Service data</li> <li>Can affect access to services and even Human Rights</li> <li>These systems are often in use 'behind-the-scenes' in<ul> <li>Banking (Credit checking, Loan approval, etc.)</li> <li>Justice system (Bail application)</li> <li>Insurance (Risks, Actuarial data, etc.)</li> </ul> </li> <li>Little known of their algorithm (black-box) or training data</li> </ul> </li> <li>Car Insurance and ML algorithms<ul> <li>Previously used Actuarial data to assess risks</li> <li>Data related to<ul> <li>Vehicle (age, engine size, condition, value, etc.)</li> <li>Address (risk of theft or other damage)</li> <li>Driver(s) (age profile, previous claims, etc.)</li> <li>Occupation (Likely mileage, occupational risks, etc.)</li> </ul> </li> <li>And this was all very reasonable</li> <li>However, they now have access to other data such as:<ul> <li>Financial data</li> <li>Advertising and Cookie tracing</li> <li>Social network posts</li> <li>Purchasing data</li> </ul> </li> <li>WHY???? - Price Optimisation</li> <li>Price Optimisation???<ul> <li>What you would be willing to pay!</li> <li>Data is also used to fine-tune the Risk calculation</li> </ul> </li> <li>Data often obtained 'by stealth'</li> <li>Gives them an unfair advantages</li> <li>Algorithmic decision making in Criminal Justice<ul> <li>Used in USA and other countries</li> <li>Decisions once made by Police, Judges and Juries now made by Machine Learning systems</li> <li>For criminal offences, ML systems can recommend:<ul> <li>Profiling</li> <li>Arrest</li> <li>Sentencing</li> </ul> </li> <li>COMPAS - Sounds like a great idea!<ul> <li>However, it has been found to have bias</li> <li>Seriously overestimates the risk of reoffending for people from more disadvantaged backgrounds</li> <li>Most bias shown against ethnic minorities</li> </ul> </li> <li>Why this?<ul> <li>Data used was mainly socio-economic - based on<ul> <li>Employment history</li> <li>Education</li> <li>Family Health</li> <li>\"Known to the Police\"</li> </ul> </li> </ul> </li> <li>COMPAS - has been found to have bias - Why is this?</li> <li>More affluent - but more serious criminals judged to be less at risk of reoffending!</li> <li>Decision systems using Aggregated data more likely to replicate inequality - why?<ul> <li>Data-sets reflect the structures of society and</li> <li>Society is unequal</li> </ul> </li> <li>Data aggregation is any process whereby data is gathered and expressed in a summary form. When data is aggregated, atomic data rows - typically gathered from multiple sources are replaced with aggregated totals</li> <li>What can we do about these inaccuracies and biases?<ul> <li>Regulate training data sets</li> <li>Data cooperatives to design training data from scratch</li> </ul> </li> <li>This should make algorithmic decision making<ul> <li>More transparent</li> <li>More representative</li> <li>More respected and trusted</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Ethics%20and%20Computing/#socio-technical-systems","title":"Socio-technical systems","text":"<ul> <li>Computer systems can't exist without an ecosystem</li> <li>Social, economic, and political support structures</li> <li>For example, for computing we need<ul> <li>Electricity networks</li> <li>Internet connections</li> <li>WiFi and Communications networks</li> <li>Payment systems</li> <li>Agreements, Laws, and Standards</li> </ul> </li> <li>Computing is a socio-technical system<ul> <li>More than the hardware and software</li> <li>Shaped and supported by relationships and agreements<ul> <li>Social</li> <li>Economic</li> <li>Political</li> </ul> </li> <li>These are based on a set of Values</li> <li>To date, mainly White, Middle-class males have shaped the computing landscape</li> <li>Examples of 'shapers' include:<ul> <li>Steve Jobs &amp; Wozniak (Apple)</li> <li>Bill Gates (Microsoft)</li> <li>Mark Zuckerberg (Facebook)</li> </ul> </li> <li>Notice a pattern?</li> <li>Deborah Johnson (IT Ethicist) certainly did.</li> </ul> </li> <li>Software (and System) design reflects prevailing context and culture</li> <li>It's possible that in future, more diversity within computing will create different 'shapes'</li> <li>May move to a more altruistic less commercial model</li> <li>Less emphasis on monetising everything</li> <li>Public ownership</li> <li>Better access</li> <li>More inclusive</li> </ul>"},{"location":"History%20of%20Computing/","title":"History of Computing","text":""},{"location":"History%20of%20Computing/#early-computing-1600s","title":"Early Computing (1600\u2019s)","text":"<p>In the 1600\u2019s a mechanical, analogue computing device called the slide ruler was invented. Slide rulers were continually improved and were eventually able to calculate logarithms, trigonometric functions, squares, cubes and their roots, and some other complicated functions.</p> <p>In addition to the slide ruler the term was often used to mean a person who performed mathematical calculations such as:</p> <ul> <li> <p>Compiling mathematical tables</p> </li> <li> <p>Calculating the movements of celestial bodies for astronomers or astrologers</p> </li> <li> <p>Working out trajectories (flight paths) of missiles for the army </p> </li> </ul>"},{"location":"History%20of%20Computing/#charles-babbage-1822-1830","title":"Charles Babbage (1822, 1830)","text":"<p>In 1822, Charles Babbage designed The Difference Engine, it was a mechanical calculator that could solve polynomial functions. The difference was not considered a computer as it was not a general-purpose machine.</p> <p>Short after 1830, Babbage started designing The Difference Engines Successor, The Analytical Engine. The Analytical Engine was designed to carry out general purpose computations on data stored on punch cards. However, due to a lack of funding the Analytical Engine was never built.</p>"},{"location":"History%20of%20Computing/#ada-lovelace","title":"Ada LoveLace","text":"<p>Even though The Analytical Engine was never built, Ada Lovelace (1815 \u2013 1852) realised that the Analytical Engine could be used for more than just simple calculations. She believed it could be programmed to do general purpose computing.</p> <p>Ada Lovelace wrote programs for the Analytical Engine; she also created the first algorithm to be carried out by a machine.</p>"},{"location":"History%20of%20Computing/#alan-turing-and-the-turing-machine-1936","title":"Alan Turing and The Turing Machine (1936)","text":"<p>In 1936, Alan Turing described a mathematical model of computation, which he called an a-machine (automatic machine) which later became known as a Turing Machine. A Turing Machine can perform any computation that a real computer can.</p> <p>Turing machines are important as they provide a relatively simple way to model general and powerful computational concepts and programs.</p> <p>Note: The Turing Machine was a logical computational construct but not a real computer.</p> <p></p>"},{"location":"History%20of%20Computing/#electromechanical-computers-1940s-1941","title":"Electromechanical Computers (1940\u2019s, 1941)","text":"<p>In the 1940\u2019s, Electromechanical computers, using electrical switches to move mechanical parts, were developed.</p> <p>The electromechanical Z3, developed in Germany in 1941, was the first digital, programmable computer to be built. The Z3 used Binary numbers, this reduced complexity compared to Babbage\u2019s machines which used decimal numbers.</p> <p></p>"},{"location":"History%20of%20Computing/#vacuum-tubes-1940s-onwards","title":"Vacuum Tubes (1940\u2019s onwards)","text":"<p>Vacuum tubes are electrical devices that control the flow of electricity. They look like lightbulbs and are of a similar size; or often bigger.</p> <p>The development of vacuum tubes led to the rapid growth of electronic devices from the 1940\u2019s onwards including radio, television, and computers based on vacuum tube technology</p> <p></p>"},{"location":"History%20of%20Computing/#impact-of-world-war-ii-and-bletchley-park-1939-1945","title":"Impact of World War II and Bletchley Park (1939 \u2013 1945)","text":"<p>The second world war saw an increase in government spending on computer and related devices. Code breaking became a critical challenge facing the British government and their allies. A top-secret operation was set up by the allies at a country mansion called Bletchley Park.</p> <p>Alan Turing was a key figure at Bletchley Park. Along with others he used electromechanical devices known as bombes to crack Nazi codes created by Enigma machines.</p> <p>The intelligence collected from Bletchley Park shortened the year by up to two years according to many historians</p> <p>Both Enigma machines and Bombes were not considered general purpose computers as they were designed to do only one thing, nonetheless they advanced many of the technologies required to jump-start the era of modern computing, much of which has taken place since WWII</p> <p>Additionally, the first digital, programmable computer was Colossus, which was installed at Bletchley Park. However, Colossus was used specifically for code breaking and was therefore not considered to be general purpose. </p> <p></p>"},{"location":"History%20of%20Computing/#_1","title":"History of Computing","text":""},{"location":"History%20of%20Computing/#eniac-1946","title":"ENIAC (1946)","text":"<p>In 1946, the first electronic, digital, programmable, general-purpose computer was invented it was named ENIAC. An Irish woman named Kathleen McNulty was one of the first programmers of ENIAC</p> <p>Many of the first computers ended in \u201cAC\u201d as prior to the electronic computer age, people were referred to as computers if they did calculations, so computer names ended in \u201cAC\u201d or automatic computer.</p> <p>With time, the word computer came to mean the machine, not a person. These machines, all-electronic and based on vacuum tubes, became known as the first generation of computers.</p> <p> </p>"},{"location":"Logic%20Gates/","title":"Logic Gates","text":"<p>Control output from inputs</p> <p>They are a series of transistors to control and output</p>"},{"location":"Logic%20Gates/#and","title":"AND","text":""},{"location":"Logic%20Gates/#truth-table","title":"Truth Table","text":"A B Output 1 1 1 1 0 0 0 1 0 0 0 0"},{"location":"Logic%20Gates/#or","title":"OR","text":""},{"location":"Logic%20Gates/#truth-table_1","title":"Truth Table","text":"A B Output 1 1 1 1 0 1 0 1 1 0 0 0"},{"location":"Logic%20Gates/#not","title":"NOT","text":""},{"location":"Logic%20Gates/#truth-table_2","title":"Truth Table","text":"A B Output 1 0 0 1"},{"location":"Logic%20Gates/#nand","title":"NAND","text":""},{"location":"Logic%20Gates/#truth-table_3","title":"Truth Table","text":"A B Output 0 0 1 0 1 1 1 0 1 1 1 0"},{"location":"Logic%20Gates/#nor","title":"NOR","text":""},{"location":"Logic%20Gates/#truth-table_4","title":"Truth Table","text":"A B Output 0 0 1 0 1 0 1 0 0 1 1 0"},{"location":"Logic%20Gates/#half-adder","title":"Half-Adder","text":""},{"location":"Logic%20Gates/#truth-table_5","title":"Truth Table","text":"A B NOT A NOT B A &amp; NOT B NOT A &amp; B SUM CARRY 0 0 1 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 0 0 0 1"},{"location":"Modelling/","title":"Modelling","text":"<ul> <li>Models</li> <li>Aircraft Simulator</li> <li> <p>Weather Forecast</p> </li> <li> <p>Simulations</p> </li> <li>Aircraft Simulator<ul> <li>Combines man and machine to see what happens</li> </ul> </li> <li> <p>Allows you to test different scenarios</p> </li> <li> <p>Real-World models</p> </li> <li>Engineering<ul> <li>Allows non-destructive testing</li> <li>CAD / CAM systems regularly used to model objects</li> <li>Stresses and forces can be applied to the model</li> <li>Saves time and money in development and testing</li> <li>Saves materials, labour and machine time</li> <li>Can be redesigned over and over until it's satisfactory</li> </ul> </li> </ul>"},{"location":"More%20About%20Python/","title":"More About Python","text":""},{"location":"More%20About%20Python/#recursion","title":"Recursion","text":"<pre><code>def factorial(numIn):\n    if numIn &gt; 1:\n        return numIn * factorial(numIn - 1)\n    else:\n        return 1\nans = factorial(6)\nprint(ans)\n</code></pre> <ul> <li>What is recursion?</li> <li>Breaking down a problem into subsets of itself</li> <li>Repeating these steps until the problem is solved</li> <li>In computing a Recursive Function calls itself</li> <li>In each Recursive call, it passes a subset of the function as an argument</li> <li>Problem continuously broken down into subsets of itself until it reaches a stopping point also called a Base Case</li> </ul> <p>Testing for Palindromes using Recursion</p> <pre><code>def is_palindrome(l,r,S):\n    if l&gt;=r:\n        return True\n    if S[l] != S[r]:\n        return False\n    return is_palindrome(l+1,r-1,S)\nmy_string = input(\"Enter a string: \")\nl = 0\nr = len(my_string) - 1\ncheck = is_palindrome(l,r,my_string.upper())\nif check:\n    print(f\"{my_string} is a palindrome\")\nelse:\n    print(f\"{my_string} is not a palindrome\")\n</code></pre> <p>Factorial calculation using recursion</p> <pre><code>def main():\n    # n = eval(input(\"Enter a non-negative integer: \"))\n    for n in range(1,10):\n        print(\"Factorial of \" + str(n) + \" is \" + str(factorial(n)))\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return (n * factorial(n-1))\nmain()\n</code></pre> <ul> <li>So, should we use Recursion all the time?</li> <li>Can be useful in solving mathematical problems</li> <li>Can be efficient but that's not always the case</li> <li>Sometimes, iteration is much simpler and faster</li> <li>Recursion can be 'elegant' ... but also confusing</li> <li>Many programmers avoid recursion</li> <li>However, it can be useful ....</li> <li>Often used in Factorial, Fibonacci Series, etc.</li> <li>Also useful in searching and sorting algorithms Fibonacci Sequencer using Recursion</li> </ul> <pre><code>def fib(n):\n    if n in {0, 1}:\n        return n\n    return fib(n-1) + fib(n-2)\nx = int(input(\"How many elements? \"))\nprint(\"Fibonacci Sequence\", x, \"elements\")\nfor i in range(0,x):\n    print(fib(i))\n</code></pre> <p>Fibonacci Sequencer without Recursion</p> <pre><code>from fibonacci import fibonacci\nx = input(\"How many elements? \")\nprint(\"Fibonacci Sequence\", x, \"elements\")\nfor i in fibonacci(length=int(x)):\n    print(i)\n</code></pre>"},{"location":"More%20About%20Python/#searching-and-sorting","title":"Searching And Sorting","text":"<ul> <li>Algorithms used to Sort and Search through Lists</li> <li>Lists:</li> <li>Also called an array in other languages</li> <li>Used to store an ordered collection of items</li> <li>Typical examples of Lists could include<ul> <li>Weekdays = ['Mon', \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]</li> </ul> </li> <li>List functions and Operators can be used to manipulate lists</li> <li>Lists are Zero-Based</li> <li>Watch this when looping through a list</li> <li>Beware the Off-By-One-Error - OBOE!</li> <li>Item n in a list Mylist can be accessed using MyList[n]</li> <li>A string is a basic type of list</li> <li> <p><code>MyString = \"Python\"</code> can be converted to a list using .list()</p> </li> <li> <p>List Functions:</p> </li> <li>List.pop(n) removes item n</li> </ul> <pre><code>myList = [85, 96, 63, 96, 17, 31, 96, 50]\nkey = 96\nkeyCtr = 0\nfor index in range(len(myList)):\n    if myList[index] == key:\n        location = index\n        keyCtr = keyCtr + 1\nprint(f\"Linear Search: \\n\")\nprint(f\"Find {key} in {myList}\\n\")\n\nif keyCtr == 0:\n    print(\"Key not found.\")\nelse:\n    if keyCtr == 1:\n        print(f\"Key found at: {location}\")\n    else:\n        print(f\"{keyCtr} keys found. Final location: {location}\\n\")\n\n</code></pre> <pre><code>myList = [85, 96, 63, 96, 17, 31, 96, 50]\nkey = 96\nlocations = []\nwhile True:\n    try:\n        for index in range(len(myList)):\n            if myList[index] == key:\n                myList.pop(index)\n                locations.append(index)\n    except:\n        break\nprint(f\"Found {len(locations)} keys at locations {locations}\")\n\n</code></pre> <pre><code>myList = [17, 24, 31, 45, 50, 63, 85, 96]\ndef binarySearchLoop(listIn, key):\n    first = 0\n    last = len(listIn) -1\n    while (last - first) &gt;=0:\n        middle = first + ((last - first) // 2)\n        if listIn[middle] == key:\n            return middle\n        elif key &lt; listIn[middle]:\n            last = middle - 1\n        else:\n            first = middle +1\n    return False\nkey = 64\nsearch = binarySearchLoop(myList, key)\nif search == False:\n    print(\"Key not found.\")\nelse:\n    print(f\"Key found at index: {search}.\")\n</code></pre>"},{"location":"SDLC/","title":"SDLC","text":""},{"location":"SDLC/#sdlc-create","title":"SDLC - Create","text":"<ul> <li>Most labour-intensive stage</li> <li>Programmers write the code</li> <li>UI designers create the interface</li> <li>(Unit) Testing \u2013 Very important at this stage</li> <li>Users may be involved as 'Consultants!'</li> <li>May involve re-design and re-writing \u2013 Iteration</li> <li>Patience required!</li> <li>Flexibility required!</li> </ul>"},{"location":"SDLC/#sdlc-evaluate","title":"SDLC \u2013 Evaluate","text":"<ul> <li>Testing essential to ensure</li> <li>Functionality</li> <li>Correctness</li> <li>Consistency</li> <li>Unit testing should be done at the Coding stage</li> <li>More testing remains to be done...</li> <li>Functionality testing</li> <li>System testing</li> <li> <p>Acceptance testing</p> </li> <li> <p>Test Data:</p> </li> <li>Conditions/Inputs that produce a known result</li> <li>Used to test every part of the software</li> <li>Must be prepared in advance and independently</li> <li>Testing can be manual or automatic</li> <li>Should include</li> <li>Normal values</li> <li>Incorrect values</li> <li>Extreme values</li> <li> <p>Boundary values</p> </li> <li> <p>Functional Testing</p> </li> <li>Compliance with specification \u2013 fit for purpose</li> <li>Usability<ul> <li>User friendly?</li> <li>Intuitive</li> <li>Easy to find ones way around the syste?</li> <li>Accessibility \u2013 easy to access functions of systems?</li> <li>Feedback \u2013 appropriate and useful error messages</li> <li>Recovery from errors \u2013 does it crash?</li> <li>Security? Too easy to access system?</li> </ul> </li> <li>Identify Functions or Features of the system</li> <li>Then for each one:<ul> <li>Create test data</li> <li>Determine expected output</li> <li>Carry out test(s)</li> <li>Compare actual with expected results</li> </ul> </li> <li>System testing</li> <li>Looks at complete system rather than Functions</li> <li>Ensures conformance with agreed specification</li> <li>Alpha testing<ul> <li>In-house</li> <li>Satisfies technical team that the system works</li> </ul> </li> <li>Beta testing<ul> <li>On-site</li> <li>Gives assurance to the client that system is fit for purpose</li> </ul> </li> <li>Alpha testing</li> <li>In-house</li> <li>First line of defence!</li> <li>Test as many paths through the system as possible</li> <li>Find bugs before the users discover them!</li> <li>Beta testing</li> <li>On-site</li> <li>Early (Beta) version of system released to users.</li> <li>Users test the system in 'real-life' environment</li> <li>Record errors and notify development team</li> <li>Wider range of use-cases and scenarios can be tested</li> <li>Continues until all (identified!) issues have been resolved</li> <li>When all issues have been resolved, the user will be asked to Sign-off</li> <li>Aka. Acceptance testing</li> <li>Evaluation stage</li> <li>After Alpha and Beta testing has been completed</li> <li>Product has probably been signed-off and in use</li> <li>Has been deemed 'Acceptable' but not perfect!</li> <li>Often a trade-off of Features vs Time available</li> <li>Modifications may be required</li> <li>Unforeseen 'features' may have been deferred to avoid Scope-Creep</li> <li>Might be time to plan Version 2</li> <li>Evaluation Stage \u2013 Questions to be Asked</li> <li>What about the Product?</li> <li>Does the system do what was required?</li> <li>How well does it meet requirements... in terms of:<ul> <li>Introduction to workplace?</li> <li>User Ownership?</li> <li>Response time?</li> <li>Coping with data volumes?</li> <li>Reliability?</li> <li>Usability?</li> </ul> </li> <li>What about the Project?<ul> <li>How about Cost vs Budget?</li> <li>What about Value for Money?</li> <li>How did we score on the timescale?</li> <li>How easy to maintain and enhance the systems?</li> <li>How long will it last?</li> <li>What have we learned from the project?</li> </ul> </li> </ul>"},{"location":"SDLC/#sdlc-document","title":"SDLC \u2013 Document","text":"<ul> <li>Effective Communication is KEY</li> <li>Informal Communication:</li> <li>Meetings, Phone calls, email, etc.</li> <li>Formal Communications:</li> <li>Project documentation, Feasibility study, Project plan, etc.</li> <li>Informal Communications:</li> <li>Meetings \u2013 Minutes should be recorded and made available as required<ul> <li>Decisions made</li> <li>Actions agreed</li> <li>Issues to be resolved</li> </ul> </li> <li>Phone Calls<ul> <li>Any important or relevant phone calls should be logged in a diary or similar</li> </ul> </li> <li>Correspondence<ul> <li>Letters</li> <li>Emails and other messaging</li> </ul> </li> <li>Changes to Requirements, Plan or Design should be documented</li> <li>Project Documentation</li> <li>Feasibility study</li> <li>Requirements specification</li> <li>Design documents</li> <li>Project plan</li> <li>Source code \u2013 including Libraries, etc.</li> <li>NOTE: Code should include Comments and other technical support</li> <li>Test plans and Test data</li> <li>Test results and details</li> <li>System Documentation</li> <li>Installation and Setup guides</li> <li>Training and End-user Documentation</li> <li> <p>Evaluation report</p> </li> <li> <p>Reporting</p> </li> <li>Inform stakeholders of progress</li> <li>Regularly!</li> <li>Manage expectations</li> <li> <p>Maintains Trust and Confidence</p> </li> <li> <p>Reporting</p> </li> <li>Avoid technical language (jargon) where possible</li> <li>Identify and report potential problems ASAP</li> <li>Timely information helps timely intervention</li> <li>Reduces risk of Cost and Time overruns</li> </ul>"},{"location":"SDLC/#software-project","title":"Software Project","text":"<ul> <li>Usually, a Need or Problem is identified</li> <li>Urgent response needed</li> <li>Competitive factors</li> <li>Changing marketplace</li> <li>Changes in legislation</li> <li>Need to control costs</li> <li>Improve lead / response time</li> <li>GDPR</li> <li>etc..</li> <li>The main players:</li> <li>Business Analyst</li> <li>Project manager</li> <li>Systems Analyst</li> <li>Designer</li> <li>Developer</li> <li>Tester</li> <li>User liaison and training</li> <li>Administrative support</li> </ul>"},{"location":"Software%20development%20process/","title":"Software development process","text":"<p>Based largely on Chinese Whispers, no formal communication</p> <p>A system was needed. Waterfall technique was brought in from construction/engineering</p> <p>Agile process is iterative and designed specifically for software development but can be more slow to begin with.</p>"},{"location":"Software%20development%20process/#waterfall-technique","title":"Waterfall Technique","text":"<p>System and Software requirements</p> <ol> <li>Analysis: *captured in a product requirement document* </li> <li>Design: *resulting in models, schema, and business rules* </li> <li>Coding: *the development, proving, and integration of software*</li> <li>Testing</li> <li>Operations</li> </ol> <p>Based on engineering and construction project management methodology Linear process with each stage usually depending on the previous stages(s) Lots of documentation Focus on process over prodect</p>"},{"location":"Software%20development%20process/#agile-technique","title":"Agile Technique","text":"<p>The agile software development life cycle is the structured series of stages that a product goes through as it moves from beginning to end. It contains six phases:</p> <ol> <li>concept</li> <li>inception</li> <li>iteration</li> <li>release</li> <li>maintenance</li> <li>retirement</li> </ol> <p></p> <ul> <li>Flexible, collaborative approach to a software project</li> <li>Emphasis on the Product rather than the Process</li> <li>Iteration: when dealing with errors, go back to a prior step and work through the process again</li> <li>Self-organizing teams - Introspection, Reflective, Mindful!</li> <li>Simple design</li> <li>Involve users at every stage</li> <li>Accept changing requirements as a given</li> <li>Short \"Sprints\" to produce \"quick wins\" and timely feedback</li> </ul>"},{"location":"Software%20development%20process/#the-agile-manifesto","title":"The Agile Manifesto","text":"<ul> <li>individuals and interactions over processes and tools</li> <li>working software over comprehensive documentation</li> <li>customer collaboration over contract negotiation</li> <li>responding to change over following a plan</li> </ul> <p>Examples of Agile methodologies include:</p> <ul> <li>Scrum</li> <li>Extreme Programming</li> <li>Rational Unified Process (More a Business Framework - IBM!)</li> <li>PRINCE2 - Used in many (UK) Government and public projects</li> </ul>"},{"location":"Software%20development%20process/#devops","title":"DevOps","text":"<ul> <li>DevOps is a set of practices combining software development and IT operations <li>It aims to shorten the systems development life cycle and provide continuous delivery with high software quality</li> <li>DevOps is complementary with Agile software development; several DevOps aspects came from the Agile way of working</li> <li>Other than it being a cross-functional combination (and portmanteau) of the terms and concepts for \"development\" and \"operations\", academics and practitioners have not developed a universal definition for the term DevOps. </li> <li>Most often, DevOps is characterized by key principles: shared ownership, workflow automation, and rapid feedback.</li>"},{"location":"Unit%20testing/","title":"Unit testing","text":"<ul> <li>Testing ensures software meets design requirements (SPECification)</li> <li>Finds Bugs - Logic errors</li> <li> <p>But what about Syntax errors?</p> </li> <li> <p>Unit - Smallest components of a program that can be tested</p> </li> <li>e.g. Loop, Function, etc.</li> <li>Usually automated - much faster so allows more testing</li> <li>Test Cases (Chapter 1)</li> <li>Unit test is just another piece of code!</li> <li>Passes parameters (Arguments) to the Function</li> <li>Unit Test calculates (or holds) the \"Expected Value\"</li> <li>Function returns the \"Actual Value\"</li> <li>Unit test code must be written independently</li> <li>Otherwise it's a pointless exercise (Programmers' Bias)</li> </ul>"},{"location":"Unit%20testing/#simple-unit-test","title":"Simple Unit Test","text":"<pre><code>print(\"Unit testing\")\nprint(\"============\")\n\ndef volumeOfCylinder(radiusIN, heightIN):\n    volume = 3.14 * (radiusIN ** 2) * heightIN\n    return volume\ndef unitTest():\n    testR = 2\n    testH = 1\n    expectedVal = 3.14 * (testR ** 2) * testH\n    actualVal = volumeOfCylinder(testR, testH)\n    passed = True\n    if expectedVal != actualVal:\n        passed = False\n    return passed\nprint(f\"Test passed {unitTest()}\")\n</code></pre>"},{"location":"Unit%20testing/#automated-unit-test-with-25-cases","title":"Automated Unit Test with 25 cases","text":"<pre><code>print(\"Function TEST\")\ndef addNums(x,y):\n    return(x+y)\n\nprint(\"i    j    Expected    Actual\")\ntestPass = True\nfor i in range(5):\n    for j in range(5):\n        expectedResult = i + j\n        actualResult = addNums(i,j)\n        print(i, \" \", j, \"    \", expectedResult, \"     \", actualResult)\n        if expectedResult != actualResult:\n            testPass = False\nprint(\"Test passed? \", testPass)\n</code></pre>"},{"location":"Unit%20testing/#automated-unit-test-with-array-of-cases","title":"Automated Unit test with Array of cases","text":"<pre><code>print(\"UnitTest_ReturnValue1\") \nprint(\"Unit Test Demo\")\n\n#First let's define the volume() Function def volumeOfCylinder (radius IN, heightIN): volume = 3.14 * (radiusIN ** 2)* height IN return volume\n\n#Now let's define the unitTest() Function \ndef VolumeOfCylinder(radiusIN, heightIN):\n    volume = 3.14 * (radiusIN ** 2) * heightIN\n    return volume\n\ndef unitTest():\n    testRs = [2, 4, 6, 10]\n    testHs = [1, 2, 3, 5]\n    success = 0\n    successful = \"\"\n\n    for i in range (len(testRs)): \n        testR = testRs[i] \n        testH = testHs[i] \n        expectedVal = 3.14 * (testR ** 2) * testH \n        actualVal = volumeOfCylinder (testR, testH) \n        if expectedVal == actualVal:\n            success = success + 1 \n    successful = str(success) + \"/\" + str(len(testRs))\n\n    return successful\n#Now we need to call the unitTest() Function\n\n#This is the only code in the Program Body! \nprint(\"Test passed: \", unitTest())\n</code></pre>"},{"location":"Universal%20Design/","title":"Universal Design","text":"<ul> <li>Originally developed in 1997 as 7 principles</li> <li>Equitable Use</li> <li>Flexibility in use</li> <li>Simple and intuitive use</li> <li>Perceptible information</li> <li>Tolerance for error</li> <li>Low physical effort</li> <li>Size and space for approach and use</li> </ul>"},{"location":"Universal%20Design/#user-centred-design","title":"User-Centred Design","text":"<ul> <li>Focus on user's interaction with the system</li> <li>Adaptive and Assistive Technology</li> <li>Localisation and Internationalisation</li> <li>Design for accessibility</li> </ul>"},{"location":"Universal%20Design/#user-experience-ux","title":"User Experience - UX","text":"<ul> <li>Experience of users when interfacing with a product</li> <li>Perception</li> <li>Preferences</li> <li>Emotion</li> <li>Before, during &amp; after use</li> <li>Aim for a Quality user experienc</li> <li>User interface - key component of UX</li> </ul>"},{"location":"Universal%20Design/#user-interface-ui","title":"User Interface - UI","text":"<ul> <li>Interface through which UX takes place</li> <li>Various Artefacts or Interface Elements:</li> <li>Dials, Buttons, Knobs, Displays - Appliances</li> <li>Menus, Buttons, Edit Boxes, Hyperlinks (GUI)</li> <li>WIMP - Windows, Icons, Mouse, Pointer</li> <li>User Interface Design</li> <li>Based on design considerations / requirements</li> <li>May be based on other criteria such as Demographics</li> </ul>"},{"location":"computer-arch/","title":"Von Newmann Architecture","text":"Input Device Device to tallow user to communicate with CPU e.g. keyboard, mouse, voice activated CPU (Central Processing Unit) Executes instructions ALU (Arithmetic Logic Unit) Receive data and instructions and performs operations as per the instructions Registers Short-term, temporary storage. Readily available to the CPU. Connects CPU to RAM Output Device It allows the CPU to communicate with the user. e.g. Monitor, speakers, LEDs"},{"location":"computer-components/","title":"Computer Component","text":"Term Definitions Example/Explanation Hardware Physical components of a computers screen (output), keyboard (input), CPU (central processing unit) (input &amp; output), mouse (input), GPU (graphics processing unit) (input &amp; output) Software Programmed part of the computer (executed by CPU) OS (operating system (Windows, Linux, .etc.)), Apps CPU Central Processing Unit AMD CPU, Intel CPU, etc. RAM Random access memory active processing ROM Read only memory (static, not changeable) static, not changeable SSD Solid State Drive none HDD Hard Disk Drive none Firmware Software that is embedded into hardware. Doesn't update. BIOS in motherboards, Software built into GPU, CPU and other computer components"},{"location":"computer-science/","title":"Resources","text":"<ul> <li>Exam Structure</li> <li> <p>Python Reference Guide - Backup Link This will given to you to use during the computer science exam, kinda like the log tables books</p> </li> <li> <p>Flashcards (From Studyclix)</p> </li> <li>Artificial Intelligence</li> <li>Computer Components</li> <li>Data Feminism - Full Book</li> <li>Algorithms</li> <li>Logic Gates - Video</li> <li>Von Neumann Architecture</li> <li>Electronics</li> <li>The Central Processing Unit (CPU) - Handout</li> <li>Video Playlist of Previous Exam Paper Solutions</li> <li>Sorting Algorithms - Video - Sorting Algorithms Animations (Website)</li> <li>Databases and Relational Databases (Slides)</li> </ul>"},{"location":"computer-science/#python-programming","title":"Python Programming","text":"<ul> <li>Log Tables</li> <li>Numerical Python</li> <li>Variables</li> <li>volumesphere.py</li> <li>Inputs</li> <li>Boolean Logic</li> </ul>"},{"location":"computer-science/#data","title":"Data","text":"<ul> <li>Binary - Video</li> <li>Hexadecimal - Video</li> <li>ASCII</li> <li>Unicode</li> </ul>"},{"location":"computer-science/#other-resources","title":"Other Resources","text":"<ul> <li>The LCCS Guide - Website with Notes</li> <li>Danny Murray (YouTube) - Videos on Computer Science and Computer Science Exam Paper Question Solutions</li> <li>Computer Science Exam Paper Question Solutions Playlist</li> <li>Computer Science Lessons Playlist</li> <li>Python Lessons Playlist</li> </ul>"},{"location":"cpu/","title":"The Central Processing Unit (CPU)","text":""},{"location":"cpu/#internals","title":"Internals","text":"<ul> <li>Arithmetic Logic Unit (ALU)</li> <li>Control Unit (CU)</li> <li>Registers</li> <li>Cache Memory</li> <li>The Fetch-Execute Cycle </li> </ul>"},{"location":"cpu/#arithmetic-logic-unit","title":"Arithmetic Logic Unit","text":"<p>An arithmetic logic unit (ALU) is a digital circuit used to perform arithmetic and logic operations. It represents the fundamental building block of the central processing unit (CPU) of a computer. Modern CPUs contain very powerful and complex ALUs. In addition to ALUs, modern CPUs contain a control unit (CU)</p> <p>Most of the operations of a CPU are performed by one or more ALUs, which load data from input registers. A register is a small amount of storage available as part of a CPU. The control unit tells the ALU what operation to perform on that data and the ALU stores the result in an output register. The control unit moves the data between these registers, the ALU, and memory</p>"},{"location":"cpu/#control-unit","title":"Control Unit","text":"<p>A control unit coordinates how data moves around a cpu. The control unit (CU) is a component of a computer's central processing unit (CPU) that directs operation of the processor. It tells the computer's memory, arithmetic/logic unit and input and output devices how to respond to a program's instructions</p> <ul> <li>The control unit obtains data / instructions from memory</li> <li>Interprets / decodes the instructions into commands / signals</li> <li>Controls transfer of instructions and data in the CPU</li> <li>Coordinates the parts of the CPU</li> </ul>"},{"location":"cpu/#registers","title":"Registers","text":"<p>In computer architecture, a processor register is a quickly accessible location available to a digital processor's central processing unit (CPU). Registers usually consist of a small amount of fast storage</p> <p>Almost all computers load data from a larger memory into registers where it is used for arithmetic operations and is manipulated or tested by machine instructions. Manipulated data is then often stored back to main memory</p> <p>Processor registers are normally at the top of the memory hierarchy, and provide the fastest way to access data. The term normally refers only to the group of registers that are directly encoded as part of an instruction, as defined by the instruction set</p> MAR Memory Address Register Holds the memory location of data that needs to be accessed MDR Memory Data Register Holds data that is being transferred to or from memory AC Accumulator Where intermediate arithmetic and logic results are stored PC Program Counter Contains the address of the next instruction to be executed CIR Current Instruction Register Contains the current instruction during processing"},{"location":"cpu/#cache-memory","title":"Cache Memory","text":"<p>Cache memory is a chip-based computer component that makes retrieving data from the computer's memory more efficient. It acts as a temporary storage area that the computer's processor can retrieve data from easily. This temporary storage area, known as a cache, is more readily available to the processor than the computer's main memory source, RAM</p> <p>Cache memory is sometimes called CPU (central processing unit) memory because it is typically integrated directly into the CPU chip or placed on a separate chip that has a separate bus* interconnect with the CPU. Therefore, it is more accessible to the processor, and able to increase efficiency, because it's physically close to the processor</p> <p>In order to be close to the processor, cache memory needs to be much smaller than main memory. Consequently, it has less storage space. It is also more expensive than main memory, as it is a more complex chip that yields higher performance</p> <p>What it sacrifices in size and price, it makes up for in speed. Cache memory operates between 10 to 100 times faster than RAM, requiring only a few nanoseconds to respond to a CPU request</p> <ul> <li>= In computer architecture, a bus is a communication system that transfers data between components inside a computer, or between computers. This expression covers all related hardware components (wire, optical fiber, etc.) and software</li> </ul> <p></p>"},{"location":"cpu/#fetch-execute-cycle","title":"Fetch-Execute Cycle","text":"<p>The main job of the CPU is to execute programs using the fetch-decode-execute cycle (also known as the instruction cycle or fetch-execute cycle). This cycle begins as soon as you turn on a computer</p> <p>o execute a program, the program code is copied from secondary storage into the main memory. The CPU's program counter is set to the memory location where the first instruction in the program has been stored, and execution begins. The program is now running</p> <p>In a program, each machine code instruction takes up a slot in the main memory. These slots (or memory locations) each have a unique memory address. The program counter stores the address of each instruction and tells the CPU in what order they should be carried out</p> <p>When a program is being executed, the CPU performs the fetch-decode-execute cycle, which repeats over and over again until reaching the STOP instruction</p> <p></p>"},{"location":"cpu/#summary-of-the-fetch-decode-execute-cycle","title":"Summary of the fetch-decode-execute cycle","text":"<ol> <li>The processor checks the program counter to see which instruction to run next</li> <li>The program counter gives an address value in the memory of where the next instruction is</li> <li>The processor fetches the instruction value from this memory location</li> <li>Once the instruction has been fetched, it needs to be decoded and executed. For example, this could involve taking one value, putting it into the ALU, then taking a different value from a register and adding the two together</li> <li>Once this is complete, the processor goes back to the program counter to find the next instruction</li> <li>This cycle is repeated until the program ends</li> </ol>"},{"location":"cpu/#benchmarking","title":"Benchmarking","text":"<p>A test used to assess the performance of a computer. Different types of benchmark software are used for the different kinds of application you might want a computer to do</p> <p>It is difficult to assess the performance of a CPU because a computer might excel at some tasks but not do so well at others. For example, a computer that is going to be used for gaming will require the best combination of hardware to handle intensive graphics quickly. The same computer might not perform so well if it was used to analyse vast amounts of scientific data</p>"},{"location":"cpu/#cores","title":"Cores","text":"<p>A CPU can contain one or more processing units. Each unit is called a core. A core contains an ALU, control unit and registers. It is common for computers to have two (dual), four (quad) or even more cores. CPUs with multiple cores have more power to run multiple programs at the same time. However, doubling the number of cores will not simply double a computer's speed. CPU cores have to communicate with each other through channels and this uses up some of the extra speed</p>"},{"location":"cpu/#clock-speed","title":"Clock speed","text":"<p>The clock speed - also known as clock rate - indicates how fast the CPU can run. This is measured in megahertz (MHz) or gigahertz (gHz) and corresponds with how many instruction cycles the CPU can deal with in a second. A 2 gHz CPU performs two billion cycles a second. A faster CPU uses more energy and creates more heat</p> <p>A computer will normally have a maximum clock speed set by default, but it is possible to change this speed in the computer BIOS. Some people increase a CPU clock speed to try to make their computer run faster - this is called overclocking</p>"},{"location":"cpu/#read-more-test-yourself","title":"Read More &amp; Test Yourself","text":"<ul> <li>CPU and Memory</li> <li>CPU and Fetch-Execute Cycle</li> <li>Fetch-Execute Cycle</li> <li>Fetch-Execute Cycle</li> </ul>"},{"location":"electronics/","title":"Electronic Components","text":"Electricity The flow of electrons Voltage Potential difference between 2 points  Current Speed and direction of the flow of electrons Resistance Control of current through a substance"},{"location":"electronics/#electricity-computers","title":"Electricity + Computers","text":"Term Explanation Example Transistor Small electrical switch -&gt; controls electrical flow Logic Gates Resistor Controls the flow of electricity dimmer switch Capacitor Store electrical energy temporarily in a potential state light discharging"},{"location":"exam-papers/","title":"Computer Science Exam Papers","text":""},{"location":"exam-papers/#higher-level","title":"Higher Level","text":"<ul> <li>2022 - Marking Scheme</li> <li>2022 - Marking Scheme</li> <li>2022 - Marking Scheme</li> </ul>"},{"location":"exam-papers/#ordinary-level","title":"Ordinary Level","text":"<ul> <li>2022 - Marking Scheme</li> <li>2022 - Marking Scheme</li> <li>2022 - Marking Scheme</li> </ul>"},{"location":"exam-structure/","title":"Exam Structure","text":""},{"location":"exam-structure/#section-a","title":"Section A","text":"<ul> <li>Short Questions</li> <li>12 Questions</li> <li>60 Marks Total</li> <li>Chapters:<ul> <li>Bases</li> <li>Logic Gates</li> </ul> </li> </ul>"},{"location":"exam-structure/#section-b","title":"Section B","text":"<ul> <li>Long Questions</li> <li>3 Questions</li> <li>70 Marks Total</li> <li>Chapters:<ul> <li>Computational thinking</li> <li>JavaScript</li> <li>The machine</li> <li>HTML</li> </ul> </li> </ul>"},{"location":"exam-structure/#section-c","title":"Section C","text":"<ul> <li>Programming</li> <li>1 Question</li> <li>80 Marks Total</li> <li>Chapters:<ul> <li>Python</li> </ul> </li> </ul>"},{"location":"flashcards/","title":"Flashcards","text":"<p>These flashcards came from this link on Studyclix</p>"},{"location":"flashcards/#computational-thinking","title":"Computational Thinking","text":"Term Definition Computational Thinking Using techniques such as abstraction, decomposition, and algorithmic thinking to solve a complex problem Abstraction Picking out the most important elements of a problem and ignoring the irrelevant details Decomposition Breaking down a complex problem into smaller, more manageable problems Algorithm A series of logical steps which can be taken to solve a problem Pseudocode A simplified coding language without any specific syntax Flowchart A diagram used to show a process. Often used to show algorithm functionality using shapes and arrows. Variable A data value that can be changed Constant A data value that always remains the same"},{"location":"flashcards/#agent-based-modelling","title":"Agent-Based Modelling","text":"Term Definition Agent-based Modelling A simulation method to examine interaction between a group of \u2018agents\u2019 in order to understand their behaviour Model A representation of a real-life system or situation using technology Agent In the context of ABMs, the agent makes decisions based on the environment they are in Emergent behaviour A behaviour noticed when a group of agents are observed interacting with each other"},{"location":"flashcards/#asciiunicode","title":"ASCII/Unicode","text":"Term Definition American Standard Code for Information Interchange A character set more commonly known as ASCII ASCII The most popular English character set which represents 128 different characters using 7-bit binary codes Extended ASCII Uses 8-bit binary codes, allowing for the representation of 128 more characters than the original ASCII character Unicode A character set which can represent emojis and characters from most major world languages"},{"location":"flashcards/#communication-protocols","title":"Communication Protocols","text":"Term Definition Protocol A set of rules which determine the way data is transmitted across a network HTTP Protocol seen at the beginning of a web address used communicate with a web server HTTPS Secure version of HTTP. Necessary for online payments and access to online banking Internet Protocol Governs the sending of data over the Internet VoIP Sends voice data over the Internet. Used in many communication applications such as Skype and WhatsApp Transmission Control Protocol Ensures correct transmission of data packets over a network MAC address An address that is used to identify a device on a network Uniform Resource Locator The unique address of a web page or resource on the Web"},{"location":"flashcards/#computers-and-society","title":"Computers and Society","text":"Term Definition Artificial Intelligence Enabling computers to carry out tasks that humans do, to the same standard as a human Machine Learning Computer systems and programs gradually becoming more accurate and precise without direct input from a programmer Alan Turing The developer of the Turing Machine (an important mathematical machine in the development of computers as they are today) Augmented Reality An enhanced version of the real world created using technology A-0 The first high-level programming language, created by Grace Hopper in 1953 Cloud Computing Using services hosted on the Internet Von Neumann Architecture The most common computer architecture used. It is composed of the CPU, input and output devices, a bus and memory Cryptography The encryption and decoding of messages sent through a computer"},{"location":"flashcards/#ethics","title":"Ethics","text":"Term Definition Ethics The morals that govern the decisions we make (i.e. what is considered to be right and wrong) Stakeholder Someone who has interest in or is affected by a particular situation Environment Where we live and our surroundings (which we must aim to conserve and protect Tim Berners-Lee The inventor of the World Wide Web (1989) Censorship The controlling of what people can view on the Internet Surveillance The monitoring of what people are viewing on the Internet Cyberbullying The use of social media to intentionally cause harm to someone else General Data Protection Regulation Act An act brought in to protect people\u2019s personal information when it is collected and processed"},{"location":"flashcards/#data","title":"Data","text":"Term Definition Binary Base 2 number system. Represented by the digits 1 and 0 Denary Base 10 number system, also known as decimal. The number system we use in daily life (1,2,3,4,5,etc.) Hexadecimal Base 16 number system. Represented by digits 1-9 and letters A-F Bit One single binary digit (1 or 0) Nibble 4 bits (binary digits) Byte 8 bits (binary digits) Kilobyte 1024 bytes Megabyte 1024 kilobytes Gigabyte 1024 megabytes Terabyte 1024 gigabytes Petabyte 1024 terabytes Data type Used to classify data based on its intended use. (E.g. strings are used to store text whilst integers and floats are used for number data) String Data type used to store text (such as names and surnames) Integer Data type used to store positive and negative whole numbers Float Data type used to store numbers with decimal points. Also known as a floating point number Boolean Data type used for true/false statements"},{"location":"flashcards/#key-abbreviations","title":"Key Abbreviations","text":"Term Definition AI Artificial Intelligence ALU Arithmetic Logic Unit ASCII American Standard Code for Information Interchange BIOS Basic Input Output System CPU Central Processing Unit CSS Cascading Style Sheets CSV Comma-separated values GB Gigabyte GDPR General Data Protection Regulation GUI Graphical User Interface HTML HyperText Markup Language HTTP HyperText Transfer Protocol HTTPS HyperText Transfer Protocol Secure IoT Internet of Things IP Internet Protocol JS JavaScript KB Kilobyte LAN Local Area Network LED Light Emitting Diode MB Megabyte OS Operation System PC Personal Computer PNG Portable Network Graphics RAM Random Access Memory ROM Read Only Memory TCP Transmission Control Protocol UI User Interface URL Uniform Resource Locator USB Universal Serial Bus WAN Wide Area Network WIMP Windows, Icons, Menus and Pointers WWW World Wide Web"},{"location":"flashcards/#software-design-and-development","title":"Software Design and Development","text":"Term Definition User-centred Design A design process that prioritises the needs and wants of the user Universal Design The designing of a product so that anyone can use it User Interface What the user sees and interacts with when using a device IDE Integrated Development Environment Iteration The repetition of steps in a process High-level Programming Language Programming language that is easy to write in for humans. It must be converted into machine code for the computer to understand it Recursion When an algorithm (or function) calls itself until a particular condition (termination condition) is met SQL Structured Query Language"},{"location":"flashcards/#world-wide-web-and-internet","title":"World Wide Web and Internet","text":"Term Definition World Wide Web A system of connected files and web pages hosted on the Internet Internet A global network of networks which connects devices all over the world Cloud A server which utilises the Internet to store files and data"},{"location":"python/","title":"Python Programming","text":"<p>We write code in an IDE/IDLE (Integrated Development Environment)</p> <p>Our IDE is Visual Studio Code (An (Open Source) Microsoft Product)</p> <ol> <li>Save all files with .py suffix This sets the programming language</li> <li>Type code (instructions) print(\"text\") = to display the word text</li> <li>Save as helloworld.py</li> <li>Run the program in the terminal \u1405 (Check the left corner for correct python interpreter)</li> </ol> <p>A string is a list of characters In our previous example, \"text\" was the string</p> <p>If we want to split the string onto two lines, we use /n</p> <p>\\n = new line</p> <pre><code>Print(\"Hello World\\nI love the weather\")\nOutput:\nHello World\nI love the weather\n</code></pre> <p>\\t = new tab</p> <pre><code>Print(\"Hello World\\tI love the weather\")\nOutput:\nHello World    I love the weather\n</code></pre>"},{"location":"python/#names-of-quotes","title":"Names of Quotes","text":"Symbols Names \"\" (\") Double Quotes '' (') Single Quotes"},{"location":"python/#maths-operations","title":"Maths Operations","text":"Name/Role Symbol Add + Subtract - Multiple * Integer Division // Float Division / To the Power of **"}]}